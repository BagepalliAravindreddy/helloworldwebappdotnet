parameters:
    - name: containerRegistry
      default: ''
    - name: containerRegistryUsername
      default: ''
    - name: containerRegistryPassword
      default: ''
    - name: dockerImageName
      default: ''
    - name: dockerImageNameVersion
      default: ''
    - name: dockerBuildEnv
      default: ''
steps:
- task: CmdLine@2
  inputs:
    script: |
      
      docker login ${{ parameters.containerRegistry }} --username ${{ parameters.containerRegistryUsername }} --password ${{ parameters.containerRegistryPassword }}
    
      docker build . -t ${{ parameters.containerRegistry }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageNameVersion }} --build-arg envtype=${{ parameters.dockerBuildEnv }}
      
      docker push ${{ parameters.containerRegistry }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageNameVersion }}

      docker save ${{ parameters.containerRegistry }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageNameVersion }} -o $(Pipeline.Workspace)/${{ parameters.dockerImageName }}.tar

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: '${{ parameters.dockerImageName }}.tar'
    publishLocation: 'pipeline'
